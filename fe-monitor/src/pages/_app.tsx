import type { AppProps } from 'next/app';
import '@/styles/global.scss';
import React, { useEffect } from "react";
import Head from "next/head";
import Script from "next/script";
import { testExecuteError, testPromiseError } from "@/utils/common";
import ErrorBoundary from "@/component/ErrorBoundary";

export default function App({ Component, pageProps }: AppProps) {

  useEffect(() => {
    // 代码执行报错
    // testExecuteError();

    // promise 报错
    // testPromiseError();
  }, []);

  return (
    <ErrorBoundary>
      <React.Fragment>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        {/* 统计 pv */}
        <Script
          src='/js/pvCollection.js'
          strategy={'beforeInteractive'}
        />

        {/* 统计页面滚动深度 */}
        {/*<Script*/}
        {/*  src='/js/scroll.js'*/}
        {/*/>*/}

        {/* 统计 页面停留时间 */}
        <Script
          src={'/js/retentionTimeCollection.js'}
          strategy={'beforeInteractive'}
        />

        {/* 统计 点击事件*/}
        <Script
          src={'/js/clickCollection.js'}
          strategy={'lazyOnload'}
        />

        {/* 收集 错误 */}
        <Script
          src={'js/errorCollection.js'}
          strategy={'beforeInteractive'}
        />

        {/* 测试 - 资源加载错误 */}
        <Script
          src={'/js/notfound.js'}
        />

        {/* 收集 - 性能信息 */}
        <Script
          src={'/js/performanceCollection.js'}
          strategy={'lazyOnload'}
        />

        <div style={{ height: '1200px' }}>
          <div style={{ height: '200px' }}>
            header
          </div>
          <div style={{ height: '900px' }}>
            <Component {...pageProps} />
          </div>
          <div style={{ height: '500px' }}>
            footer
          </div>
        </div>
      </React.Fragment>
    </ErrorBoundary>

  );
}
